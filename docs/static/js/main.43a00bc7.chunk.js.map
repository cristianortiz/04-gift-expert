{"version":3,"sources":["components/AddCategory.styles.js","components/AddCategory.js","components/GifGrid.styles.js","components/GifGridItem.js","components/helpers/getGifs.js","components/hooks/useFetchGifs.js","components/GifGrid.js","components/GiftExpert.styles.js","components/GiftExpertApp.js","index.js"],"names":["AddCategorySearch","styled","input","CategoryForm","form","AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","type","value","onChange","target","GifGridContainer","div","GifGridItemContainer","ItemImage","img","ItemTitle","p","GifGridItem","title","url","src","alt","getGifAPI","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGrid","TopBar","TopBarTitleContainer","TopBarTitle","h2","MainContent","button","GiftExpertApp","categories","setCategories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOACaA,EAAoBC,IAAOC,MAAV,gIAMjBC,EAAeF,IAAOG,KAAV,4C,OC0BVC,EA7BK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,cAACN,EAAD,CAAcO,SANK,SAACC,GACpBA,EAAEC,iBACwB,KAAtBJ,EAAWK,QACfP,EAAYE,IAGZ,SACE,cAACR,EAAD,CACEc,KAAK,OACLC,MAAOP,EACPQ,SAdoB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,a,QCRdG,EAAmBjB,IAAOkB,IAAV,4JAQhBC,EAAuBnB,IAAOkB,IAAV,yNAUpBE,EAAYpB,IAAOqB,IAAV,qEAITC,EAAYtB,IAAOuB,EAAV,yECZPC,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,eAACP,EAAD,WACE,cAACC,EAAD,CAAWO,IAAKD,EAAKE,IAAKH,IAC1B,cAACH,EAAD,UAAYG,Q,wBCWHI,EAjBA,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACVL,EADU,iDACsCM,UACpDF,GAFc,+DAIGG,MAAMP,GAJT,cAIVQ,EAJU,gBAKOA,EAAKC,OALZ,uBAKRC,EALQ,EAKRA,KACFC,EAAOD,EAAKE,KAAI,SAACjB,GAAS,IAAD,EAC7B,MAAO,CACLkB,GAAIlB,EAAIkB,GACRd,MAAOJ,EAAII,MACXC,IAAG,UAAEL,EAAImB,cAAN,aAAE,EAAYC,iBAAiBf,QAVtB,kBAcTW,GAdS,4CAAH,sDCmBAK,EAjBM,SAACZ,GACpB,MAA0BxB,mBAAS,CACjC8B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACRjB,EAAUC,GAAUiB,MAAK,SAACP,GACxBK,EAAS,CACPT,KAAMI,EACNG,SAAS,SAGZ,CAACb,IAEGc,GCKMI,EAhBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEjB,EAAkCY,EAAaZ,GAAjCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACE,qCACGA,GAAW,2CACZ,cAAC1B,EAAD,UACGuB,EAAOF,KAAI,SAACjB,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIkB,aCdnBU,EAASjD,IAAOkB,IAAV,gVAWNgC,EAAuBlD,IAAOkB,IAAV,gEAIpBiC,EAAcnD,IAAOoD,GAAV,2EAMXC,GAFYrD,IAAOsD,OAAV,0BAEKtD,IAAOkB,IAAV,2BCaTqC,EAzBO,WACpB,MAAoCjD,mBAAS,CAAC,aAA9C,mBAAOkD,EAAP,KAAmBC,EAAnB,KAOA,OACE,qCACE,eAACR,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,0BAEF,cAAC,EAAD,CAAa9C,YAXC,SAACS,GAEnB2C,EAAc,CAAC3C,GAAF,mBAAY0C,WAWvB,cAACH,EAAD,UACGG,EAAWlB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCvBxB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACE,cAAC,EAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.43a00bc7.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\nexport const AddCategorySearch = styled.input`\n  width: 100%;\n  padding: 3px 3px 3px 5px;\n  border: 1px solid lightgray;\n  border-radius: 5px;\n`;\nexport const CategoryForm = styled.form`\n  width: 100%;\n`;\n/* export const TopBarTitleContainer = styled.div``;\nexport const TopBarTitle = styled.h2``;\nexport const AddButton = styled.button``;\n\nexport const MainContent = styled.div``; */\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AddCategorySearch, CategoryForm } from \"./AddCategory.styles\";\n\nconst AddCategory = ({ addCategory }) => {\n  //local state to track the input form values entered by the user\n  const [inputValue, setInputValue] = useState(\"\");\n\n  //function to process the onChange event of form iunput\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  //handle form submit event when user press enter in the input\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() === \"\") return;\n    addCategory(inputValue);\n  };\n  return (\n    <CategoryForm onSubmit={handleSubmit}>\n      <AddCategorySearch\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </CategoryForm>\n  );\n};\n//using propTypes for documenting components\nAddCategory.propTypes = {\n  addCategory: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import styled from \"@emotion/styled\";\n//this is a card div\nexport const GifGridContainer = styled.div`\n  margin: 20px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  animation: fadeIn;\n  animation-duration: 2s;\n`;\nexport const GifGridItemContainer = styled.div`\n  position: relative;\n  background: #fff;\n  height: auto;\n  align-content: center;\n  border: 1px solid lightgray;\n  border-radius: 6px;\n  overflow: hidden;\n  margin: 0 10px 10px 0;\n`;\nexport const ItemImage = styled.img`\n  //width: 400px;\n  max-height: 170px;\n`;\nexport const ItemTitle = styled.p`\n  padding: 20px 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { GifGridItemContainer, ItemImage, ItemTitle } from \"./GifGrid.styles\";\n//sended here already destructured {...img}\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <GifGridItemContainer>\n      <ItemImage src={url} alt={title} />\n      <ItemTitle>{title}</ItemTitle>\n    </GifGridItemContainer>\n  );\n};\n\nexport default GifGridItem;\n","//helper function to request the API returns the promise with the response data\nconst getGifAPI = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=frfwNmdBg63dS4yNjLpsoOISBv941KJZ`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  //returns the promise to resolve the gif collections retrieved\n  return gifs;\n};\n\nexport default getGifAPI;\n","import { useEffect, useState } from \"react\";\nimport getGifAPI from \"../helpers/getGifs\";\n//custom hook to request API and state the response data\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifAPI(category).then((images) => {\n      setState({\n        data: images,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n\nexport default useFetchGifs;\n","import React from \"react\";\nimport { GifGridContainer } from \"./GifGrid.styles\";\nimport GifGridItem from \"./GifGridItem\";\n\nimport useFetchGifs from \"./hooks/useFetchGifs\";\n\nconst GifGrid = ({ category }) => {\n  //custom hook to request API and state the response data\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      <GifGridContainer>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </GifGridContainer>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import styled from \"@emotion/styled\";\nexport const TopBar = styled.div`\n  background-color: #ffffff;\n  //background-image: linear-gradient(315deg, #ffffff 0%, #d7e1ec 74%);\n  //border-bottom: 1px solid #d9dee4;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n  box-shadow: 2px 6px 4px -4px rgba(0, 0, 0, 0.2);\n`;\nexport const TopBarTitleContainer = styled.div`\n  width: 150px;\n  display: block;\n`;\nexport const TopBarTitle = styled.h2`\n  margin-right: 0px;\n  display: inline-flex;\n`;\nexport const AddButton = styled.button``;\n\nexport const MainContent = styled.div``;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./AddCategory\";\nimport GifGrid from \"./GifGrid\";\nimport {\n  TopBar,\n  TopBarTitleContainer,\n  TopBarTitle,\n  MainContent,\n} from \"./GiftExpert.styles\";\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"Chayanne\"]);\n  //function to add a category from another component\n  const addCategory = (value) => {\n    //value first add new categorys retrieved in first place  in render\n    setCategories([value, ...categories]);\n  };\n\n  return (\n    <>\n      <TopBar>\n        <TopBarTitleContainer>\n          <TopBarTitle>GifExpert</TopBarTitle>\n        </TopBarTitleContainer>\n        <AddCategory addCategory={addCategory} />\n      </TopBar>\n      <MainContent>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </MainContent>\n    </>\n  );\n};\n\nexport default GiftExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GiftExpertApp from \"./components/GiftExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <GiftExpertApp />\n    </>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}